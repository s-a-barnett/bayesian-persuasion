// Run experiments for strong evidence effect with pragmatic agent
// webppl see_speaker.wppl --require ../shared --require webppl-csv -- --nSticks=3 --agentBias=1 --numExp=1

// Parameters to vary during the simulation
// Read from the command line
var params = {
  nSticks : argv.nSticks,
  numExp : argv.numExp,
  agent1bias : 0
};

// Allows the S2 agent to choose maxSteps sticks, where maxSteps <= nSticks
// To run from the beginning, set stickChoices and stickChoicesValues to []
// These variables allow earlier choices to factor into decision-making
var runAgent = function(bias, sticks, stickChoices, stickChoiceValues, maxSteps) {
  if(stickChoices.length < maxSteps) {
    var agent = S2(bias, sticks, stickChoices, 'agent0', params)
    var stick = sample(agent)
    var choice = [{'agentID': 'agent0', stickLength: stick}]
    runAgent(bias, shared.removeSingleElement(stick, sticks), stickChoices.concat(choice), stickChoiceValues.concat(stick), maxSteps)
  } else {
    return stickChoiceValues
  }
}

// Simluates the distribution of move sequences given by the runAgent function above.
var choiceSequence = function(bias, sticks, stickChoices, stickChoiceValues, maxSteps) {
  return Infer({method: 'forward', samples: 100, model: function() {
    console.log('here')
    return runAgent(bias, sticks, stickChoices, stickChoiceValues, maxSteps)
  }})
}

var maxSteps = 2 // Hard-coded choice for experiments and simulations
                 // TODO: Fix error when maxSteps > 2
var sticks = stickPrior(params.nSticks) // Arbitrarily draw sticks for experiment

csv.writeJoint(choiceSequence(argv.agentBias, sticks, [], [], maxSteps), 'results/exp' + params.numExp + '.csv')
